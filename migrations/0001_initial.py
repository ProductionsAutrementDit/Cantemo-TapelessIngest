# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2019-06-04 15:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AggregateIngestJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(editable=False, max_length=48, null=True)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clip',
            fields=[
                ('umid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('imported_on', models.DateTimeField(null=True)),
                ('folder_path', models.TextField()),
                ('output_file', models.TextField(null=True)),
                ('file_id', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0)),
                ('progress', models.CharField(max_length=255, null=True)),
                ('spanned', models.BooleanField(default=False)),
                ('master_clip', models.BooleanField(default=False)),
                ('provider_name', models.CharField(db_column='provider', max_length=100)),
                ('collection_id', models.TextField(null=True)),
                ('item_id', models.CharField(max_length=10)),
                ('clip_xml', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ClipFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField()),
                ('filetype', models.CharField(max_length=100)),
                ('order', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ClipMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('value', models.CharField(blank=True, default='', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('basename', models.CharField(max_length=200)),
                ('path', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MetadataMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metadata_provider', models.CharField(max_length=200)),
                ('metadata_portal', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reel',
            fields=[
                ('umid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('folder_path', models.TextField()),
                ('media_xml', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_id', models.CharField(blank=True, db_column='storage', default='', max_length=255)),
                ('tmp_storage', models.CharField(blank=True, default='', max_length=255)),
                ('bmxtranswrap', models.CharField(blank=True, default='', max_length=255)),
                ('mxf2raw', models.CharField(blank=True, default='', max_length=255)),
                ('base_folder', models.CharField(blank=True, default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SpannedClips',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TapelessStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TapelessStoragePath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os', models.CharField(max_length=100)),
                ('path', models.TextField()),
                ('storage', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='paths', to='TapelessIngest.TapelessStorage')),
            ],
        ),
        migrations.CreateModel(
            name='IngestJob',
            fields=[
                ('clip', models.OneToOneField(max_length=100, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='job', serialize=False, to='TapelessIngest.Clip')),
                ('status', models.CharField(max_length=48)),
                ('progress', models.IntegerField(default=None, null=True, verbose_name='Ingest progress')),
                ('error', models.CharField(default=None, max_length=255, null=True, verbose_name='Error message')),
                ('exception', models.CharField(default=None, max_length=65535, null=True, verbose_name='Exception message')),
                ('job', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='TapelessIngest.AggregateIngestJob')),
            ],
        ),
        migrations.AddField(
            model_name='spannedclips',
            name='clip',
            field=models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, to='TapelessIngest.Clip'),
        ),
        migrations.AddField(
            model_name='spannedclips',
            name='master_clip',
            field=models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='spanned_clips', to='TapelessIngest.Clip'),
        ),
        migrations.AddField(
            model_name='folder',
            name='clips',
            field=models.ManyToManyField(related_name='folders', to='TapelessIngest.Clip'),
        ),
        migrations.AddField(
            model_name='folder',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clipmetadata',
            name='clip',
            field=models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='metadatas', to='TapelessIngest.Clip'),
        ),
        migrations.AddField(
            model_name='clipfile',
            name='clip',
            field=models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='input_files', to='TapelessIngest.Clip'),
        ),
        migrations.AddField(
            model_name='clip',
            name='reel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='TapelessIngest.Reel'),
        ),
        migrations.AddField(
            model_name='clip',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='spannedclips',
            unique_together=set([('master_clip', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='folder',
            unique_together=set([('user', 'path')]),
        ),
        migrations.AlterUniqueTogether(
            name='clipmetadata',
            unique_together=set([('clip', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='clipfile',
            unique_together=set([('clip', 'path')]),
        ),
    ]
